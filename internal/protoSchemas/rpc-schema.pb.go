// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc-schema.proto

package protoSchemas

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RpcRequest struct {
	Command              *string  `protobuf:"bytes,1,req,name=command" json:"command,omitempty"`
	Id                   []byte   `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Target               []byte   `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
	ForwardRequest       []byte   `protobuf:"bytes,4,opt,name=forwardRequest" json:"forwardRequest,omitempty"`
	ForwardResponse      []byte   `protobuf:"bytes,5,opt,name=forwardResponse" json:"forwardResponse,omitempty"`
	RoundtripToken       []byte   `protobuf:"bytes,6,opt,name=roundtripToken" json:"roundtripToken,omitempty"`
	Value                []byte   `protobuf:"bytes,7,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcRequest) Reset()         { *m = RpcRequest{} }
func (m *RpcRequest) String() string { return proto.CompactTextString(m) }
func (*RpcRequest) ProtoMessage()    {}
func (*RpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_schema_29a11c07e64784a4, []int{0}
}
func (m *RpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcRequest.Unmarshal(m, b)
}
func (m *RpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcRequest.Marshal(b, m, deterministic)
}
func (dst *RpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcRequest.Merge(dst, src)
}
func (m *RpcRequest) XXX_Size() int {
	return xxx_messageInfo_RpcRequest.Size(m)
}
func (m *RpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RpcRequest proto.InternalMessageInfo

func (m *RpcRequest) GetCommand() string {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return ""
}

func (m *RpcRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RpcRequest) GetTarget() []byte {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *RpcRequest) GetForwardRequest() []byte {
	if m != nil {
		return m.ForwardRequest
	}
	return nil
}

func (m *RpcRequest) GetForwardResponse() []byte {
	if m != nil {
		return m.ForwardResponse
	}
	return nil
}

func (m *RpcRequest) GetRoundtripToken() []byte {
	if m != nil {
		return m.RoundtripToken
	}
	return nil
}

func (m *RpcRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type RpcResponse struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Nodes                []byte   `protobuf:"bytes,2,opt,name=nodes" json:"nodes,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	RoundtripToken       []byte   `protobuf:"bytes,4,opt,name=roundtripToken" json:"roundtripToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcResponse) Reset()         { *m = RpcResponse{} }
func (m *RpcResponse) String() string { return proto.CompactTextString(m) }
func (*RpcResponse) ProtoMessage()    {}
func (*RpcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_schema_29a11c07e64784a4, []int{1}
}
func (m *RpcResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcResponse.Unmarshal(m, b)
}
func (m *RpcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcResponse.Marshal(b, m, deterministic)
}
func (dst *RpcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcResponse.Merge(dst, src)
}
func (m *RpcResponse) XXX_Size() int {
	return xxx_messageInfo_RpcResponse.Size(m)
}
func (m *RpcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RpcResponse proto.InternalMessageInfo

func (m *RpcResponse) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RpcResponse) GetNodes() []byte {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *RpcResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *RpcResponse) GetRoundtripToken() []byte {
	if m != nil {
		return m.RoundtripToken
	}
	return nil
}

func init() {
	proto.RegisterType((*RpcRequest)(nil), "RpcRequest")
	proto.RegisterType((*RpcResponse)(nil), "RpcResponse")
}

func init() { proto.RegisterFile("rpc-schema.proto", fileDescriptor_rpc_schema_29a11c07e64784a4) }

var fileDescriptor_rpc_schema_29a11c07e64784a4 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0xd1, 0x4a, 0x03, 0x31,
	0x10, 0x45, 0x49, 0xda, 0x6d, 0x71, 0x94, 0x2a, 0xa1, 0xc8, 0x3c, 0x96, 0x3e, 0xc8, 0xbe, 0xe8,
	0xc7, 0x04, 0x7f, 0x20, 0x24, 0xa3, 0x2e, 0xba, 0x99, 0x34, 0xc9, 0xea, 0xdf, 0xfa, 0x2d, 0x62,
	0x12, 0xab, 0x2e, 0xfb, 0x78, 0xcf, 0x0c, 0x87, 0x7b, 0xe1, 0x26, 0x06, 0x7b, 0x9f, 0xec, 0x0b,
	0x8d, 0xe6, 0x21, 0x44, 0xce, 0x7c, 0xfc, 0x14, 0x00, 0x3a, 0x58, 0x4d, 0xa7, 0x89, 0x52, 0x56,
	0x08, 0x5b, 0xcb, 0xe3, 0x68, 0xbc, 0x43, 0x71, 0x90, 0xfd, 0x85, 0xfe, 0x89, 0x6a, 0x07, 0x72,
	0x70, 0x28, 0x0f, 0xa2, 0xbf, 0xd2, 0x72, 0x70, 0xea, 0x16, 0x36, 0xd9, 0xc4, 0x67, 0xca, 0xb8,
	0x2a, 0xac, 0x25, 0x75, 0x07, 0xbb, 0x27, 0x8e, 0x1f, 0x26, 0xba, 0xe6, 0xc4, 0x75, 0xb9, 0xcf,
	0xa8, 0xea, 0xe1, 0xfa, 0x4c, 0x52, 0x60, 0x9f, 0x08, 0xbb, 0xf2, 0x38, 0xc7, 0xdf, 0xc6, 0xc8,
	0x93, 0x77, 0x39, 0x0e, 0xe1, 0x91, 0x5f, 0xc9, 0xe3, 0xa6, 0x1a, 0xff, 0x53, 0xb5, 0x87, 0xee,
	0xdd, 0xbc, 0x4d, 0x84, 0xdb, 0x72, 0xae, 0xe1, 0x78, 0x82, 0xcb, 0xb2, 0xaf, 0xc9, 0xea, 0x0c,
	0x71, 0x9e, 0xb1, 0x87, 0xce, 0xb3, 0xa3, 0xd4, 0x96, 0xd5, 0xf0, 0xab, 0x5a, 0xfd, 0x51, 0x2d,
	0x14, 0x59, 0x2f, 0x15, 0xf9, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xa6, 0xcc, 0xdf, 0x66, 0x01,
	0x00, 0x00,
}
