// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peer-schema.proto

package protoSchemas

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PeerRequest struct {
	Type                 *uint32  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Port                 *uint32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	LocalAddress         []byte   `protobuf:"bytes,3,opt,name=localAddress" json:"localAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerRequest) Reset()         { *m = PeerRequest{} }
func (m *PeerRequest) String() string { return proto.CompactTextString(m) }
func (*PeerRequest) ProtoMessage()    {}
func (*PeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_peer_schema_d5481e90fddd1bb9, []int{0}
}
func (m *PeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerRequest.Unmarshal(m, b)
}
func (m *PeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerRequest.Marshal(b, m, deterministic)
}
func (dst *PeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerRequest.Merge(dst, src)
}
func (m *PeerRequest) XXX_Size() int {
	return xxx_messageInfo_PeerRequest.Size(m)
}
func (m *PeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeerRequest proto.InternalMessageInfo

func (m *PeerRequest) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *PeerRequest) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *PeerRequest) GetLocalAddress() []byte {
	if m != nil {
		return m.LocalAddress
	}
	return nil
}

type PeerResponse struct {
	Peers                []byte   `protobuf:"bytes,1,opt,name=peers" json:"peers,omitempty"`
	LocalPeers           []byte   `protobuf:"bytes,2,opt,name=localPeers" json:"localPeers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerResponse) Reset()         { *m = PeerResponse{} }
func (m *PeerResponse) String() string { return proto.CompactTextString(m) }
func (*PeerResponse) ProtoMessage()    {}
func (*PeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_peer_schema_d5481e90fddd1bb9, []int{1}
}
func (m *PeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerResponse.Unmarshal(m, b)
}
func (m *PeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerResponse.Marshal(b, m, deterministic)
}
func (dst *PeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerResponse.Merge(dst, src)
}
func (m *PeerResponse) XXX_Size() int {
	return xxx_messageInfo_PeerResponse.Size(m)
}
func (m *PeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PeerResponse proto.InternalMessageInfo

func (m *PeerResponse) GetPeers() []byte {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *PeerResponse) GetLocalPeers() []byte {
	if m != nil {
		return m.LocalPeers
	}
	return nil
}

func init() {
	proto.RegisterType((*PeerRequest)(nil), "PeerRequest")
	proto.RegisterType((*PeerResponse)(nil), "PeerResponse")
}

func init() { proto.RegisterFile("peer-schema.proto", fileDescriptor_peer_schema_d5481e90fddd1bb9) }

var fileDescriptor_peer_schema_d5481e90fddd1bb9 = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x48, 0x4d, 0x2d,
	0xd2, 0x2d, 0x4e, 0xce, 0x48, 0xcd, 0x4d, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x8a, 0xe4,
	0xe2, 0x0e, 0x48, 0x4d, 0x2d, 0x0a, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62,
	0x29, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x54, 0x60, 0xd2, 0xe0, 0x0d, 0x02, 0xb3, 0x41, 0x62, 0x05,
	0xf9, 0x45, 0x25, 0x12, 0x4c, 0x0a, 0x8c, 0x20, 0x31, 0x10, 0x5b, 0x48, 0x89, 0x8b, 0x27, 0x27,
	0x3f, 0x39, 0x31, 0xc7, 0x31, 0x25, 0xa5, 0x28, 0xb5, 0xb8, 0x58, 0x82, 0x59, 0x81, 0x51, 0x83,
	0x27, 0x08, 0x45, 0x4c, 0xc9, 0x85, 0x8b, 0x07, 0x62, 0x74, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa,
	0x90, 0x08, 0x17, 0x2b, 0xc8, 0xfe, 0x62, 0x09, 0x46, 0xb0, 0x62, 0x08, 0x47, 0x48, 0x8e, 0x8b,
	0x0b, 0xac, 0x2b, 0x00, 0x2c, 0xc5, 0x04, 0x96, 0x42, 0x12, 0x01, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x33, 0x7a, 0x07, 0x96, 0xb4, 0x00, 0x00, 0x00,
}
